<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:m="clr-namespace:Schedule.Models"
                    xmlns:calendar="clr-namespace:Schedule.Controls.Calendar"
                    xmlns:controls="clr-namespace:Schedule.Controls">

    <calendar:EnumToDayNameConverter x:Key="DayItemsConverter"/>

    <Style TargetType="{x:Type calendar:Calendar}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="#EAEAEA"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type calendar:Calendar}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible">
                            <Grid x:Name="ListGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition MinHeight="100" Height="*"/>
                                    <RowDefinition MinHeight="100" Height="*"/>
                                    <RowDefinition MinHeight="100" Height="*"/>
                                    <RowDefinition MinHeight="100" Height="*"/>
                                    <RowDefinition MinHeight="100" Height="*"/>
                                    <RowDefinition MinHeight="100" Height="*"/>
                                </Grid.RowDefinitions>
                                <calendar:CalendarHeader x:Name="TableHeader" Grid.Row="0"/>
                                <calendar:CalendarDaysList Grid.Row="1"/>
                                <calendar:CalendarDaysList Grid.Row="2"/>
                                <calendar:CalendarDaysList Grid.Row="3"/>
                                <calendar:CalendarDaysList Grid.Row="4"/>
                                <calendar:CalendarDaysList Grid.Row="5"/>
                                <calendar:CalendarDaysList Grid.Row="6"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type calendar:CalendarDaysList}">
        <Style.Resources>
            <m:DoubleClassToStringConverter x:Key="DoubleClassToStringConverter"/>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="BorderBrush" Value="#CCCCCC" />
        <Setter Property="Background" Value="#EAEAEA"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type calendar:CalendarDaysList}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="7" Rows="1"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <calendar:CalendarDay Header="{Binding Date.Day}" Date="{Binding Date}" ScheduleView="{Binding View}" ItemsSource="{Binding Items}" VerticalAlignment="Stretch">
                        <calendar:CalendarDay.ItemTemplate>
                            <DataTemplate>
                                <calendar:CalendarDayItem Header="{Binding Period, Converter={StaticResource DoubleClassToStringConverter}}" ItemsSource="{Binding Items}" BorderBrush="{Binding BorderBrush}" Margin="0 1 0 0">
                                    <calendar:CalendarDayItem.ItemsTemplate>
                                        <DataTemplate>
                                            <controls:ScheduleCardItem Focusable="False" Item="{Binding Item}" ScheduleView="{Binding ScheduleView}"/>
                                        </DataTemplate>
                                    </calendar:CalendarDayItem.ItemsTemplate>
                                </calendar:CalendarDayItem>
                            </DataTemplate>
                        </calendar:CalendarDay.ItemTemplate>
                    </calendar:CalendarDay>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CalendarButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#99EEEEEE"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#55AAAAAA"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type calendar:CalendarDay}">
        <Setter Property="BorderBrush" Value="#CCCCCC" />
        <Setter Property="Background" Value="#DDDDDD"/>
        <Setter Property="BorderThickness" Value="0 0 1 0"/>
        <Setter Property="Foreground" Value="DarkGray"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type calendar:CalendarDay}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <Grid MinHeight="100" MinWidth="135">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <DockPanel Grid.Row="0" LastChildFill="False">
                                <TextBlock DockPanel.Dock="Left" Foreground="{TemplateBinding Foreground}" FontSize="18" Margin="5 0 0 2" >
                                    <ContentPresenter ContentSource="Header"/>
                                </TextBlock>
                                <Button DockPanel.Dock="Right" Height="25" Width="25" x:Name="PART_AddButton" Style="{StaticResource CalendarButtonStyle}">
                                    <Path Data="M 4 4 l 0 -4 2 0 0 4 4 0 0 2 -4 0 0 4 -2 0 0 -4 -4 0 0 -2 Z" Fill="{TemplateBinding Foreground}" SnapsToDevicePixels="False"/>
                                </Button>
                                <Button DockPanel.Dock="Right" Height="25" Width="25" x:Name="PART_ViewButton" Style="{StaticResource CalendarButtonStyle}">
                                    <WrapPanel Width="15" Height="10">
                                        <Path Data="F 1 M 305.801,388 C 297.801,388 293,395.949 293,395.949 293,395.949 297.801,404 305.801,404 313.801,404 318.602,396 318.602,396 318.602,396 313.801,388 305.801,388 L 305.801,388 Z M 305.801,402.398 C 298.801,402.398 295,396 295,396 295,396 298.801,389.602 305.801,389.602 312.801,389.602 316.602,396 316.602,396 316.602,396 312.801,402.398 305.801,402.398 L 305.801,402.398 Z M 310.602,396 C 310.602,398.652 308.45,400.801 305.801,400.801 303.148,400.801 301,398.653 301,396 301,393.348 303.148,391.199 305.801,391.199 308.449,391.199 310.602,393.348 310.602,396 L 310.602,396 Z" Fill="{TemplateBinding Foreground}" SnapsToDevicePixels="False" Stretch="Fill"/>
                                    </WrapPanel>
                                </Button>
                            </DockPanel>
                            <ItemsPresenter Grid.Row="1"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DayType" Value="CurrentDay">
                            <Setter Property="Background" Value="DimGray"/>
                            <Setter Property="BorderBrush" Value="DimGray"/>
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Trigger>
                        <Trigger Property="DayType" Value="OtherMonth">
                            <Setter Property="Background" Value="#D9D9D9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <calendar:CalendarDayItem Margin="0 1 0 0"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CalendarDayItemHeader" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Checked">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="path">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="180">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Unchecked">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="path">
                                <EasingDoubleKeyFrame KeyTime="0" Value="180">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Background="Transparent" 
                            BorderBrush="Transparent" 
                            BorderThickness="0" Cursor="Hand">
                        <DockPanel Height="34">
                            <Path x:Name="path" Data="M 1 1 L 5 5 9 1 8 0 5 3 2 0 1 1 Z" VerticalAlignment="Center" Margin="0 14.5,11,14.5" Fill="DimGray" SnapsToDevicePixels="True" DockPanel.Dock="Right" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Width="8">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <TextBlock Margin="5 0 0 0" VerticalAlignment="Center" DockPanel.Dock="Left" Foreground="DimGray">
                            <ContentPresenter ContentSource="Content"/>
                            </TextBlock>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Unchecked_BeginStoryboard" Storyboard="{StaticResource Unchecked}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Checked_BeginStoryboard" Storyboard="{StaticResource Checked}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type calendar:CalendarDayItem}">
        <Setter Property="Opacity" Value=".7"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="MediumPurple"/>
        <Setter Property="MaxWidth" Value="205"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type calendar:CalendarDayItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Expanded">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="listView">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0:0:0.25" To="1" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                        <Storyboard x:Key="Collapsed">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="listView">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CalendarDayItem.Active.Opacity">
                            <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                        <Storyboard x:Key="CalendarDayItem.Inactive.Opacity">
                            <DoubleAnimation Duration="0:0:0.2" To=".7" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="5 0 0 0" Width="Auto" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <ToggleButton Style="{StaticResource CalendarDayItemHeader}" Content="{TemplateBinding Header}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ListView x:Name="listView" Grid.Row="1" Height="Auto" ItemsSource="{TemplateBinding ItemsSource}" ItemTemplate="{TemplateBinding ItemsTemplate}">
                                <ListView.Template>
                                    <ControlTemplate TargetType="{x:Type ListView}">
                                        <ItemsPresenter />
                                    </ControlTemplate>
                                </ListView.Template>
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Focusable="False"/>
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                    <Border BorderBrush="#EFEFEF" BorderThickness="0 1 0 0" Padding="3" SnapsToDevicePixels="True">
                                                        <ContentPresenter ContentSource="Content"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="0"/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </ListView.LayoutTransform>
                            </ListView>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Collapsed_BeginStoryboard" Storyboard="{StaticResource Collapsed}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Expanded_BeginStoryboard" Storyboard="{StaticResource Expanded}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CalendarDayItem.Active.Opacity}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource CalendarDayItem.Inactive.Opacity}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CalendarDayItem.Active.Opacity}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource CalendarDayItem.Inactive.Opacity}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Text="{Binding Name}"/>
                        <TextBlock Text="{Binding Age}"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type calendar:CalendarHeader}">
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="BorderBrush" Value="#CCCCCC"/>
        <Setter Property="Background" Value="#DDDDDD"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type calendar:CalendarHeader}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="1" Columns="7"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <calendar:CalendarHeaderItem Header="{Binding Mode=OneWay, Converter={StaticResource DayItemsConverter}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type calendar:CalendarHeaderItem}">
        <Setter Property="BorderThickness" Value="0 0 1 0"/>
        <Setter Property="BorderBrush" Value="#CCCCCC"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type calendar:CalendarHeaderItem}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                        <TextBlock Margin="5 1 0 0" Foreground="Gray" Text="{TemplateBinding Header}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>