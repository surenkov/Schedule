<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:slices="clr-namespace:Schedule.Controls.Slices"
                    xmlns:controls="clr-namespace:Schedule.Controls">

    <Style TargetType="{x:Type slices:SliceView}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#CCCCCC"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type slices:SliceView}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer VerticalScrollBarVisibility="Visible" 
                                      HorizontalScrollBarVisibility="Visible">
                            <DockPanel>
                                <ContentPresenter DockPanel.Dock="Top" ContentSource="Header"/>
                                <Border DockPanel.Dock="Bottom"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="0 0 1 1">
                                    <ItemsPresenter />
                                </Border>
                            </DockPanel>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <slices:SliceHorizontalHeaderList ItemsSource="{Binding}" 
                                                      Height="20"
                                                      BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=slices:SliceView}}"
                                                      Background="#DDDDDD"
                                                      BorderThickness="0 0 1 1"
                                                      Padding="20 0 0 0"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <slices:SliceList BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=slices:SliceView}}"
                                      Header="{Binding Header}"
                                      ItemsSource="{Binding Items}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type slices:SliceHorizontalHeaderList}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type slices:SliceHorizontalHeaderList}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="1" Columns="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType=slices:SliceHorizontalHeaderList}}"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <slices:SliceHeaderItem Text="{Binding}"
                                            HorizontalAlignment="Left"
                                            BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=slices:SliceHorizontalHeaderList}}"
                                            Background="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType=slices:SliceHorizontalHeaderList}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type slices:SliceHeaderItem}">
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Padding" Value="5 1 5 0"/>
        <Setter Property="BorderThickness" Value="1 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type slices:SliceHeaderItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock Text="{TemplateBinding Text}" 
                                   Foreground="{TemplateBinding Foreground}" 
                                   Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type slices:SliceList}">
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="Background" Value="#DDDDDD"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="MinHeight" Value="120"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type slices:SliceList}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ContentPresenter ContentSource="Header" VerticalAlignment="Center">
                                <ContentPresenter.LayoutTransform>
                                    <RotateTransform Angle="-90"/>
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                            <ItemsPresenter Margin="20 0 0 0"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <slices:SliceHeaderItem Text="{Binding}" BorderThickness="0" Background="Transparent" Padding="7 1 7 0" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="1" Background="White"  Columns="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType=slices:SliceList}}"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <slices:SliceCell BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=slices:SliceList}}"
                                      IsExpanded="{Binding IsExpanded, Mode=TwoWay}"
                                      ItemsSource="{Binding Items}"
                                      MinWidth="200"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type slices:SliceCell}">
        <Setter Property="MinHeight" Value="130"/>
        <Setter Property="BorderThickness" Value="1 0 0 0"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type slices:SliceCell}">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="ExpanderVisibilityConverter"/>
                        <DataTemplate x:Key="SliceCellItemsTemplate">
                            <controls:ScheduleCardItem Focusable="False" 
                                               Item="{Binding Item}" 
                                               ScheduleView="{Binding ScheduleView}"
                                               Background="White"
                                               BorderBrush="#EAEAEA"
                                               BorderThickness="0 0 0 1"/>
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="0 1 1 1">
                            <StackPanel>
                                <ItemsControl ItemsSource="{Binding Items}" ItemTemplate="{StaticResource SliceCellItemsTemplate}"/>
                                <slices:SliceExpander Visibility="{Binding ExpanderVisibility, Converter={StaticResource ExpanderVisibilityConverter}}"
                                                      ItemTemplate="{StaticResource SliceCellItemsTemplate}"
                                                      IsExpanded="{Binding IsExpanded}"
                                                      ItemsSource="{Binding ExpanderItems}"/>
                            </StackPanel>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliceCellExpanderHeader" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Checked">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="path">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="180">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Unchecked">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="path">
                                <EasingDoubleKeyFrame KeyTime="0" Value="180">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}" BorderThickness="0" Cursor="Hand">
                        <DockPanel Height="10">
                            <Path x:Name="path" Data="M 1 1 L 5 5 9 1 8 0 5 3 2 0 1 1 Z" 
                                  VerticalAlignment="Center" 
                                  Fill="DimGray" 
                                  RenderTransformOrigin="0.5,0.5" 
                                  Stretch="Uniform" Width="10">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Unchecked_BeginStoryboard" Storyboard="{StaticResource Unchecked}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Checked_BeginStoryboard" Storyboard="{StaticResource Checked}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#EFEFEF"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type slices:SliceExpander}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="MediumPurple"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type slices:SliceExpander}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Expanded">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="listView">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Collapsed">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="listView">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ListView x:Name="listView" Grid.Row="0" Height="Auto" ItemsSource="{TemplateBinding ItemsSource}" ItemTemplate="{TemplateBinding ItemTemplate}">
                            <ListView.Template>
                                <ControlTemplate TargetType="{x:Type ListView}">
                                    <ItemsPresenter />
                                </ControlTemplate>
                            </ListView.Template>
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Focusable="False"/>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <ContentPresenter ContentSource="Content"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="0"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ListView.LayoutTransform>
                        </ListView>
                        <ToggleButton Style="{StaticResource SliceCellExpanderHeader}" Grid.Row="1" x:Name="PART_ExpandButton" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Collapsed}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Expanded}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>